apply plugin: 'android'
apply plugin: 'android-test'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:18.0.0'

    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.1.+'
    testCompile 'com.squareup:fest-android:1.0.+'
}


tasks.withType(Compile) {
  options.compilerArgs << "-Xlint:unchecked"
}

// version/git/buildtime information from Jake Wharton's post:
// https://plus.google.com/108284392618554783657/posts/6f5TcVPRZij
import java.text.SimpleDateFormat;

def versionMajor = 0
def versionMinor = 1
def versionPatch = 1
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha() {
  return 'git rev-parse --short HEAD'.execute().text.trim()
}

def buildTime() {
  def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
  df.setTimeZone(TimeZone.getTimeZone("UTC"))
  return df.format(new Date())
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        //        buildConfig """                             \
        //          public static final String GIT_SHA = "${gitSha()}";
        //          public static final String BUILD_TIME = "${buildTime()}";
        //          public static final String VERSION = "${versionMajor}.${versionMinor}.${versionPatch}";
        //        """
    }

    // enable the diamond operator, multi-catch, 
    // strings in switches, try with resources, etc
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
